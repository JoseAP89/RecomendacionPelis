import type { NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'

import { useEffect, useState } from 'react'
import { Container} from 'react-bootstrap'
import Footer from '../components/Footer'
import MovieTile from '../components/MovieTile'
import NavigationBar from '../components/NavigationBar'
import FormaUsuario from '../models/formausuario'
import Pelicula from '../models/pelicula'
import TransactionService from '../services/transaction'
import HomeGrid from '../styles/styledComponents/homeGrid'


const Home: NextPage = () => {

  const router = useRouter()
  const [alias, setAlias] = useState<string>("");
  const [usuario, setUsuario] = useState<FormaUsuario>();
  const [recomendacionesGenero, setRecomendacionesGenero] = useState<Array<Pelicula> | undefined>();
  const [recomendacionesActor, setRecomendacionesActor] = useState<Array<Pelicula> | undefined>();
  const [recomendacionesDir, setRecomendacionesDir] = useState<Array<Pelicula> | undefined>();
  const [recomendacionesPeli, setRecomendacionesPeli] = useState<Array<Pelicula> | undefined>();

  useEffect(() => {
    let wrapper: HTMLElement | null = document.querySelector("#wrapper-home");
    // oculta la pagina hasta que el token no ha sido validado
    if (!!wrapper) {
      wrapper.hidden = true;
    }
    let token : string = sessionStorage.getItem("token") || "";
    console.log("token: ", token)
		let nav : HTMLElement|null= document.querySelector("#topnav");
		if (!!nav) {
			nav.hidden = false;	
		}
    TransactionService.checkToken(token).then((res) => {
      setAlias(res.data);
      if (!!wrapper) {
        wrapper.hidden = false;
      }
    }).catch( () => { // token erroneo, acceso ilegal, regresarse a la pantalla de inicio de sesión
      router.push('/');
    });
    TransactionService.getUsuario(token).then((res) => {
      setUsuario(res.data);
      console.log("usuario:",res.data);
    }).catch( (error) => { // token erroneo, acceso ilegal, regresarse a la pantalla de inicio de sesión
      console.log("error:",error);
    });
    TransactionService.getRecomendacionby(token, "pelicula").then((res) => {
      console.log(res);
      setRecomendacionesPeli(res.data)
    }).catch((err) => {
      console.log(err);
    });
    TransactionService.getRecomendacionby(token, "actor").then((res) => {
      console.log(res);
      setRecomendacionesActor(res.data)
    }).catch((err) => {
      console.log(err);
    });
    TransactionService.getRecomendacionby(token, "director").then((res) => {
      console.log(res);
      setRecomendacionesDir(res.data)
    }).catch((err) => {
      console.log(err);
    });
    TransactionService.getRecomendacionby(token, "genero").then((res) => {
      console.log("genero:: ",res);
      setRecomendacionesGenero(res.data)
    }).catch((err) => {
      console.log(err);
    });
  }, []);

  useEffect(() => {
    // coloca el alias del usuario en la barra principal
    let div_alias = document.querySelector("#usuario-alias");
    if (!!div_alias) {
      div_alias.textContent = alias;
    }
  }, [alias]);



  return (
    <HomeGrid >
      <div id='wrapper-home'>
        <Head>
          <title>Inicio</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <script src="https://kit.fontawesome.com/1348fe1b4f.js" crossOrigin="anonymous" async></script>
        </Head>
        
        <NavigationBar usuario={usuario}/>
        <div className='py-5 px-1 mx-5' >
          <section className='head-home'>
            <h3>Bienvenido!</h3>
            <p style={{paddingBottom:"20px"}} >
              Estimado cliente, te proporcionamos un catálogo de películas con base en tus preferencias. <br/>
              Tienes al alcance de un clic las películas que más se acercan a tus gustos, disfruta tu sitio.
            </p>
          </section> 

          <section>
            <div className=''>
              <h5>RECOMENDACIONES X GÉNERO</h5>
              <div className='mosaic-genre'>
              { !!recomendacionesGenero &&
                recomendacionesGenero.map( peli => {
                  return (
                    <MovieTile pelicula={peli} />
                  )
                })
              }
              </div>
            </div>
          </section>

          <section className='movie-grid'>
            <div className='movie-recomendacion'>
              <h5>RECOMENDACIONES X PELICULA</h5>
              <div className='mosaic'>
              { !!recomendacionesPeli &&
                recomendacionesPeli.map( peli => {
                  return (
                    <MovieTile pelicula={peli} />
                  )
                })
              }
              </div>
            </div>
            <div className='person-recomendacion'>
              <h5 className='title'>SEGUN TUS ACTORES Y DIRECTORES</h5>
              <div className='mosaic'>
              { !!recomendacionesActor &&
                recomendacionesActor.map( peli => {
                  return (
                    <MovieTile pelicula={peli} />
                  )
                })
              }
              { !!recomendacionesDir &&
                recomendacionesDir.map( peli => {
                  return (
                    <MovieTile pelicula={peli} />
                  )
                })
              }

              </div>
            </div>
          </section>

        </div>
      </div>
      <Footer />
    </HomeGrid>
  )
}

export default Home
